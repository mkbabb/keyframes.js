export declare function linear(t: number): number;
export declare function easeInQuad(t: number): number;
export declare function easeOutQuad(t: number): number;
export declare function easeInOutQuad(t: number): number;
export declare function easeInCubic(t: number): number;
export declare function easeOutCubic(t: number): number;
export declare function easeInOutCubic(t: number): number;
export declare function smoothStep3(t: number): number;
export declare const CSSBezier: (x1: number, y1: number, x2: number, y2: number) => (t: number) => number;
export declare function easeInBounce(t: number): number;
export declare function bounceInEase(t: number): number;
export declare function bounceInEaseHalf(t: number): number;
export declare const jumpTerms: readonly ["jump-start", "jump-end", "jump-none", "jump-both", "start", "end", "both"];
export declare function steppedEase(steps: number, jumpTerm?: (typeof jumpTerms)[number]): (t: number) => number;
export declare function stepStart(): (t: number) => number;
export declare function stepEnd(): (t: number) => number;
export declare const bezierPresets: {
    readonly ease: readonly [0.25, 0.1, 0.25, 1];
    readonly "ease-in": readonly [0.42, 0, 1, 1];
    readonly "ease-out": readonly [0, 0, 0.58, 1];
    readonly "ease-in-out": readonly [0.42, 0, 0.58, 1];
    readonly "ease-in-back": readonly [0.6, -0.28, 0.735, 0.045];
    readonly "ease-out-back": readonly [0.175, 0.885, 0.32, 1.275];
    readonly "ease-in-out-back": readonly [0.68, -0.55, 0.265, 1.55];
};
export declare const timingFunctions: {
    readonly linear: typeof linear;
    readonly easeInQuad: typeof easeInQuad;
    readonly "ease-in-quad": typeof easeInQuad;
    readonly easeOutQuad: typeof easeOutQuad;
    readonly "ease-out-quad": typeof easeOutQuad;
    readonly easeInOutQuad: typeof easeInOutQuad;
    readonly "ease-in-out-quad": typeof easeInOutQuad;
    readonly easeInCubic: typeof easeInCubic;
    readonly "ease-in-cubic": typeof easeInCubic;
    readonly easeOutCubic: typeof easeOutCubic;
    readonly "ease-out-cubic": typeof easeOutCubic;
    readonly easeInOutCubic: typeof easeInOutCubic;
    readonly "ease-in-out-cubic": typeof easeInOutCubic;
    readonly easeInBounce: typeof easeInBounce;
    readonly "ease-in-bounce": typeof easeInBounce;
    readonly bounceInEase: typeof bounceInEase;
    readonly "bounce-in-ease": typeof bounceInEase;
    readonly bounceInEaseHalf: typeof bounceInEaseHalf;
    readonly "bounce-in-ease-half": typeof bounceInEaseHalf;
    readonly smoothStep3: typeof smoothStep3;
    readonly "smooth-step-3": typeof smoothStep3;
    readonly ease: (t: number) => number;
    readonly "ease-in": (t: number) => number;
    readonly "ease-out": (t: number) => number;
    readonly "ease-in-out": (t: number) => number;
    readonly "ease-in-back": (t: number) => number;
    readonly "ease-out-back": (t: number) => number;
    readonly "ease-in-out-back": (t: number) => number;
    readonly steps: typeof steppedEase;
    readonly "step-start": typeof stepStart;
    readonly "step-end": typeof stepEnd;
};
